{
    "collab_server" : "",
    "contents" : "#概念為 飽足感>喜好程度>金額 目前最高106\n#資料設定\ncash <- 80 #設定金額\nmutation_probability <- 50 #突變機率\ncondition <- 100 #結束條件(迴圈次數)\nlen <- nrow(d) #染色體長度\n\n\n\n#主程式\nmain <- function(){\n  \n  initialization()#初始化\n  for(i in c(1:condition)){#執行n次\n    \n    fitness()#計算fitness_value\n    select_chromosomes()#選種\n    elite()#菁英政策\n    crossover()#交配\n    mutation()#突變\n    \n    \n  }\n  fitness()#計算最後一次fitness_value(適應值)\n  print(fitness_v[5])#輸出這次計算時最好結果的適應值\n  print(chromosomes05)#輸出這次計算時最好結果的放入順序\n  for(i in c(1:len)){\n    if(chromosomes05[i]==1){\n      print(d[i,2])\n    }\n  }\n}\n\n\n#初代設定()\ninitialization <- function(){\n  \n  a <- sample(len,5)\n  chromosomes01 <<- rep(0, times = len, each = 1)\n  chromosomes02 <<- rep(0, times = len, each = 1)\n  chromosomes03 <<- rep(0, times = len, each = 1)\n  chromosomes04 <<- rep(0, times = len, each = 1)\n  chromosomes05 <<- rep(0, times = len, each = 1)\n  while(d[a[1],3]>80){a[1] <- sample(len,1)}\n  while(d[a[2],3]>80){a[2] <- sample(len,1)}\n  while(d[a[3],3]>80){a[3] <- sample(len,1)}\n  while(d[a[4],3]>80){a[4] <- sample(len,1)}\n  while(d[a[5],3]>80){a[5] <- sample(len,1)}\n  chromosomes01[a[1]] <<- 1\n  chromosomes02[a[2]] <<- 1\n  chromosomes03[a[3]] <<- 1\n  chromosomes04[a[4]] <<- 1\n  chromosomes05[a[5]] <<- 1\n  \n}\n\n\n#計算適應值(80-價位+滿意度*飽足感)\nfitness <- function(){\n  \n  fitness_v <<- rep(80,times=5,each=1)\n  for(i in c(1:len)){\n    fitness_v[1] <<- fitness_v[1]+chromosomes01[i]*(d[i,4]*d[i,5]-d[i,3])\n    fitness_v[2] <<- fitness_v[2]+chromosomes02[i]*(d[i,4]*d[i,5]-d[i,3])\n    fitness_v[3] <<- fitness_v[3]+chromosomes03[i]*(d[i,4]*d[i,5]-d[i,3])\n    fitness_v[4] <<- fitness_v[4]+chromosomes04[i]*(d[i,4]*d[i,5]-d[i,3])\n    fitness_v[5] <<- fitness_v[5]+chromosomes05[i]*(d[i,4]*d[i,5]-d[i,3])\n  }\n  \n}\n\n\n#選種(採用輪盤式選擇)\nselect_chromosomes <- function(){\n  \n  if(sum(fitness_v)<0){\n    s <- sum(fitness_v)*-1\n    r <- sample(s,2,replace = TRUE)\n    r[1] <- r[1]*-1\n    r[2] <- r[2]*-1\n  }else{\n    r <- sample(sum(fitness_v),2,replace = TRUE)\n  }\n  \n  \n  if(r[1]<=fitness_v[1]){\n    select01 <<- chromosomes01\n  }else if(r[1]>fitness_v[1] && r[1]<=(fitness_v[1]+fitness_v[2])){\n    select01 <<- chromosomes02\n  }else if(r[1]>(fitness_v[1]+fitness_v[2]) && r[1]<=(fitness_v[1]+fitness_v[2]+fitness_v[3])){\n    select01 <<- chromosomes03\n  }else if(r[1]>(fitness_v[1]+fitness_v[2]+fitness_v[3]) && r[1]<=(fitness_v[1]+fitness_v[2]+fitness_v[3]+fitness_v[4])){\n    select01 <<- chromosomes04\n  }else if(r[1]>(fitness_v[1]+fitness_v[2]+fitness_v[3]+fitness_v[4]) && r[1]<=(fitness_v[1]+fitness_v[2]+fitness_v[3]+fitness_v[4]+fitness_v[5])){\n    select01 <<- chromosomes05\n  }\n  \n  if(r[2]<=fitness_v[1]){\n    select02 <<- chromosomes01\n  }else if(r[2]>fitness_v[1] && r[2]<=(fitness_v[1]+fitness_v[2])){\n    select02 <<- chromosomes02\n  }else if(r[2]>(fitness_v[1]+fitness_v[2]) && r[2]<=(fitness_v[1]+fitness_v[2]+fitness_v[3])){\n    select02 <<- chromosomes03\n  }else if(r[2]>(fitness_v[1]+fitness_v[2]+fitness_v[3]) && r[2]<=(fitness_v[1]+fitness_v[2]+fitness_v[3]+fitness_v[4])){\n    select02 <<- chromosomes04\n  }else if(r[2]>(fitness_v[1]+fitness_v[2]+fitness_v[3]+fitness_v[4]) && r[2]<=(fitness_v[1]+fitness_v[2]+fitness_v[3]+fitness_v[4]+fitness_v[5])){\n    select02 <<- chromosomes05\n  }\n  \n}\n\n\n#交配(使用多點交配，交配兩次)\ncrossover <- function(){\n  \n  r1 <- sample(len,4)\n  r2 <- sample(len,4)\n  temp <- chromosomes01[r1[1]]\n  chromosomes01[r1[1]] <<- chromosomes02[r1[2]]\n  chromosomes02[r1[2]] <<- temp\n  temp <- chromosomes01[r1[3]]\n  chromosomes01[r1[3]] <<- chromosomes02[r1[4]]\n  chromosomes02[r1[4]] <<- temp\n  \n  temp <- chromosomes03[r2[1]]\n  chromosomes03[r2[1]] <<- chromosomes04[r2[2]]\n  chromosomes04[r2[2]] <<- temp\n  temp <- chromosomes03[r2[3]]\n  chromosomes03[r2[3]] <<- chromosomes04[r2[4]]\n  chromosomes04[r2[4]] <<- temp\n  \n}\n\n\n#突變(隨機選擇一個數字，再依機率選擇要不要突變)\nmutation <- function(){\n  \n  r <- sample(100,4)\n  s <- sample(len,4)\n  fitness()\n  \n  \n  cash_t <- cash\n  if(r[1]<mutation_probability){\n    \n    if(chromosomes01[s[1]]==0){\n      for(i in c(1:len)){\n        cash_t <- cash_t - (chromosomes01[i]*d[i,3])\n      }\n      if(d[s[1],3]<cash_t){\n        test<-chromosomes01\n        test[s[1]] <- 1\n        fitnessV<- 80\n        for(i in c(1:len)){\n          fitnessV <- fitnessV+test[i]*(d[i,4]*d[i,5]-d[i,3])\n        }\n        if(fitnessV>fitness_v[1]){\n          chromosomes01[s[1]] <<- 1\n        }\n      }\n    }else{\n      test<-chromosomes01\n      test[s[1]] <- 0\n      fitnessV<- 80\n      for(i in c(1:len)){\n        fitnessV <- fitnessV+test[i]*(d[i,4]*d[i,5]-d[i,3])\n      }\n      if(fitnessV>fitness_v[1]){\n        chromosomes01[s[1]] <<- 0\n      }\n    }\n  }\n  \n  \n  \n  cash_t <- cash\n  if(r[2]<mutation_probability){\n    \n    if(chromosomes02[s[2]]==0){\n      for(i in c(1:len)){\n        cash_t <- cash_t - (chromosomes02[i]*d[i,3])\n      }\n      if(d[s[2],3]<cash_t){\n        test<-chromosomes02\n        test[s[2]] <- 1\n        fitnessV<- 80\n        for(i in c(1:len)){\n          fitnessV <- fitnessV+test[i]*(d[i,4]*d[i,5]-d[i,3])\n        }\n        if(fitnessV>fitness_v[2]){\n          chromosomes02[s[2]] <<- 1\n        }\n      }\n    }else{\n      test<-chromosomes02\n      test[s[2]] <- 0\n      fitnessV<- 80\n      for(i in c(1:len)){\n        fitnessV <- fitnessV+test[i]*(d[i,4]*d[i,5]-d[i,3])\n      }\n      if(fitnessV>fitness_v[2]){\n        chromosomes02[s[2]] <<- 0\n      }\n    }\n  }\n  \n  \n  cash_t <- cash\n  if(r[3]<mutation_probability){\n    \n    if(chromosomes03[s[3]]==0){\n      for(i in c(1:len)){\n        cash_t <- cash_t - (chromosomes03[i]*d[i,3])\n      }\n      if(d[s[3],3]<cash_t){\n        test<-chromosomes03\n        test[s[3]] <- 1\n        fitnessV<- 80\n        for(i in c(1:len)){\n          fitnessV <- fitnessV+test[i]*(d[i,4]*d[i,5]-d[i,3])\n        }\n        if(fitnessV>fitness_v[3]){\n          chromosomes03[s[3]] <<- 1\n        }\n      }\n    }else{\n      test<-chromosomes03\n      test[s[3]] <- 0\n      fitnessV<- 80\n      for(i in c(1:len)){\n        fitnessV <- fitnessV+test[i]*(d[i,4]*d[i,5]-d[i,3])\n      }\n      if(fitnessV>fitness_v[3]){\n        chromosomes03[s[3]] <<- 0\n      }\n    }\n  }\n  \n  \n  \n  cash_t <- cash\n  if(r[4]<mutation_probability){\n    \n    if(chromosomes04[s[4]]==0){\n      for(i in c(1:len)){\n        cash_t <- cash_t - (chromosomes04[i]*d[i,3])\n      }\n      if(d[s[4],3]<cash_t){\n        test<-chromosomes04\n        test[s[4]] <- 1\n        fitnessV<- 80\n        for(i in c(1:len)){\n          fitnessV <- fitnessV+test[i]*(d[i,4]*d[i,5]-d[i,3])\n        }\n        if(fitnessV>fitness_v[4]){\n          chromosomes04[s[4]] <<- 1\n        }\n      }\n    }else{\n      test<-chromosomes04\n      test[s[4]] <- 0\n      fitnessV<- 80\n      for(i in c(1:len)){\n        fitnessV <- fitnessV+test[i]*(d[i,4]*d[i,5]-d[i,3])\n      }\n      if(fitnessV>fitness_v[4]){\n        chromosomes04[s[4]] <<- 0\n      }\n    }\n  }\n  \n}\n\n\n\n#菁英政策\nelite <- function(){\n  r <- order(fitness_v)\n  if(r[5]==1){chromosomes05<<-chromosomes01}\n  if(r[5]==2){chromosomes05<<-chromosomes02}\n  if(r[5]==3){chromosomes05<<-chromosomes03}\n  if(r[5]==4){chromosomes05<<-chromosomes04}\n}",
    "created" : 1483377704670.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2647152098",
    "id" : "38A1AF27",
    "lastKnownWriteTime" : 1483613541,
    "last_content_update" : 1483613541499,
    "path" : "C:/Users/user001/Desktop/jialing/bag_p/main.R",
    "project_path" : "main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}